{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/Фон.jpg","components/Profile/Posts/MyPosts.module.css","components/Profile/Posts/Post/MyPost.module.css","components/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/MyPost.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/Posts/MyPosts.Container.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","b","profileData","onDoubleClick","type","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","formSummaryError","descriptionBlock","createField","Input","Textarea","Object","keys","contacts","map","key","contact","profDataFormButton","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsTitle","contactsValue","onClick","Contacts","ProfileInfo","savePhoto","saveProfile","isHiddenChangePhoto","setChangePhotoInput","Preloader","alt","src","headerPhoto","themePhoto","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","avatar","message","likesCount","MyPosts","React","memo","postsElements","posts","p","id","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","addPostButton","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c2fbebd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3pjkS\",\"mainPhoto\":\"ProfileInfo_mainPhoto__13-AP\",\"contact\":\"ProfileInfo_contact__3mVHa\",\"themePhoto\":\"ProfileInfo_themePhoto__2AJdl\",\"profileData\":\"ProfileInfo_profileData__3rOlS\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__eU0-V\",\"profDataFormButton\":\"ProfileInfo_profDataFormButton__1l23d\",\"hover\":\"ProfileInfo_hover__3d_eA\",\"active\":\"ProfileInfo_active__5GYwp\"};","module.exports = __webpack_public_path__ + \"static/media/Фон.3a911ab9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1MCRq\",\"posts\":\"MyPosts_posts__2TvJ0\",\"addPostButton\":\"MyPosts_addPostButton__2eRkO\",\"hover\":\"MyPosts_hover__16puF\",\"active\":\"MyPosts_active__15rSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1gFgg\"};","import React, {useEffect, useState} from 'react';\r\nimport b from \"../Profile/ProfileInfo/ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(()=> {\r\n        setStatus(props.status);\r\n    }, [props.status]\r\n    );\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n         props.updateStatus(status)\r\n    };\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={b.profileData}>\r\n            {!editMode &&\r\n            <div>\r\n              <b>Status: </b>  <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input type=\"text\" onBlur={deActivateEditMode} autoFocus={true} onChange={onStatusChange} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport b from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={b.profileData}>\r\n            {error && <div className={b.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div className={b.descriptionBlock}>\r\n                <div>\r\n                    <b>Full name: </b>{createField('Full name', 'fullName', [], Input)}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job: </b>{createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n                </div>\r\n\r\n                <div>\r\n                    <b>My professional\r\n                        skills: </b>{createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <b>About me: </b>{createField('About me', 'aboutMe', [], Textarea)}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={b.contact}>\r\n                            <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b></div>\r\n                    }\r\n                )}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button className={b.profDataFormButton}>save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport b from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../../ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport headerPhoto from '../../../assets/images/Фон.jpg'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [isHiddenChangePhoto,setChangePhotoInput]= useState(true);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n            setChangePhotoInput(true)\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <img alt='headerImg' src={headerPhoto} className={b.themePhoto}/>\r\n                </div>\r\n                <img alt='profileImg' src={profile.photos.large || userPhoto} className={b.mainPhoto}/>\r\n\r\n                <div><button className={b.profDataFormButton} onClick={()=>setChangePhotoInput(false)}>change photo</button></div>\r\n\r\n                {isOwner && isHiddenChangePhoto===false && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} className={b.profileData}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={b.profileData}>\r\n            <div className={b.descriptionBlock}>\r\n                <div>\r\n                    <b>Full name: </b>{profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job: </b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills: </b>{profile.lookingForAJobDescription}\r\n                </div>}\r\n                <div>\r\n                    <b>About me: </b>{profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n                        return <Contacts key={key} contactsTitle={key} contactsValue={profile.contacts[key]}/>\r\n                    }\r\n                )}\r\n                </div>\r\n            </div>\r\n            {isOwner && <div>\r\n                <button className={b.profDataFormButton} onClick={goToEditMode}>edit profile</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nconst Contacts = ({contactsTitle, contactsValue}) => {\r\n    return <div className={b.contact}><b>{contactsTitle}:</b>{contactsValue}</div>\r\n\r\n};\r\nexport default ProfileInfo;","import React from 'react';\r\nimport b from './MyPost.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={b.item}>\r\n            <div><img src={props.avatar}/></div>\r\n            {props.message}\r\n            <div>\r\n                <span> Like </span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport b from './MyPosts.module.css'\r\nimport Post from \"./Post/MyPost\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form/es\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} avatar={p.avatar}/>);\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={b.postsBlock}>\r\n            <h3>My Posts </h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={b.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Post message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button className={b.addPostButton}> Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n};\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};const mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addPost: (newPostText)=>{dispatch(addPostActionCreator(newPostText));}\r\n    }\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Posts/MyPosts.Container\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         saveProfile={props.saveProfile}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto,saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}